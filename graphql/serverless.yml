
service: graphql
frameworkVersion: ">=1.14.0 <2.0.0"

custom:
  stageDefault: dev
  # Could later change to a reference to a CloudFormation output.
  # AWS doesn't yet provide an easy way to get a DynamoDB table ARN:
  # https://forums.aws.amazon.com/thread.jspa?threadID=100847
  # https://serverless.com/framework/docs/providers/aws/guide/variables#reference-cloudformation-outputs
  dbTableArnBase: arn:aws:dynamodb:${env:AWS_REGION}:${env:AWS_ACCOUNT_ID}:table/
  customAuthorizerArn:
    Fn::ImportValue: ${cf:lambda-${self:provider.stage}.FirebaseAuthorizerArn}

provider:
  name: aws
  runtime: nodejs6.10
  region: us-west-2
  stage: ${env:SLS_STAGE, self:custom.stageDefault}
  # Rules for fine-grained DynamoDB access:
  #   https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/specifying-conditions.html
  #   https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/using-identity-based-policies.html
  iamRoleStatements:
    # Charities table
    - Effect: "Allow"
      Action:
        - "dynamodb:BatchGetItem"
        - "dynamodb:GetItem"
        - "dynamodb:Query"
        - "dynamodb:Scan"
      Resource: "${self:custom.dbTableArnBase}Charities-${self:provider.stage}"
    # Widgets table
    - Effect: "Allow"
      Action:
        - "dynamodb:BatchGetItem"
        - "dynamodb:GetItem"
        - "dynamodb:Query"
        - "dynamodb:Scan"
      Resource: "${self:custom.dbTableArnBase}Widgets-${self:provider.stage}"
    # Users table
    - Effect: "Allow"
      Action:
        - "dynamodb:GetItem"
        - "dynamodb:PutItem"
        - "dynamodb:Query"
        - "dynamodb:UpdateItem"
      Resource:
        - "${self:custom.dbTableArnBase}Users-${self:provider.stage}"
        - "${self:custom.dbTableArnBase}Users-${self:provider.stage}/index/*"
    # UserLevels table
    - Effect: "Allow"
      Action:
        - "dynamodb:BatchGetItem"
        - "dynamodb:GetItem"
        - "dynamodb:Query"
        - "dynamodb:Scan"
      Resource: "${self:custom.dbTableArnBase}UserLevels-${self:provider.stage}"
    # VcDonationLog table
    - Effect: "Allow"
      Action:
        - "dynamodb:PutItem"
      Resource: "${self:custom.dbTableArnBase}VcDonationLog-${self:provider.stage}"
    # BackgroundImages table
    - Effect: "Allow"
      Action:
        - "dynamodb:BatchGetItem"
        - "dynamodb:GetItem"
        - "dynamodb:Query"
        - "dynamodb:Scan"
      Resource: "${self:custom.dbTableArnBase}BackgroundImages-${self:provider.stage}"
    # UserWidgets table
    - Effect: "Allow"
      Action:
        - "dynamodb:BatchGetItem"
        - "dynamodb:BatchWriteItem"
        - "dynamodb:GetItem"
        - "dynamodb:PutItem"
        - "dynamodb:Query"
        - "dynamodb:UpdateItem"
      Resource:
        - "${self:custom.dbTableArnBase}UserWidgets-${self:provider.stage}"
        - "${self:custom.dbTableArnBase}UserWidgets-${self:provider.stage}/index/*"

plugins:
  # Include only the required node modules.
  # https://github.com/dougmoscrop/serverless-plugin-include-dependencies
  - serverless-plugin-include-dependencies

# Only include the build and its node modules.
package:
  exclude:
    - ./**
  include:
    - build/**

functions:
  graphql:
    handler: build/handler.serverlessHandler
    events:
      - http:
          path: graphql/
          method: post
          cors: true
          # Require user to be authenticated.
          # https://serverless.com/framework/docs/providers/aws/events/apigateway#http-endpoints-with-custom-authorizers
          authorizer:
            # Reference the authorizer ARN exported from the "lambda" stack.
            #   https://github.com/serverless/serverless/pull/3575
            # Bug with this behavior:
            #   https://github.com/serverless/serverless/issues/3129
            arn: ${self:custom.customAuthorizerArn}
