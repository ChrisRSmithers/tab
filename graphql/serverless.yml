
service: graphql
frameworkVersion: ">=1.14.0 <2.0.0"

provider:
  name: aws
  runtime: nodejs6.10
  region: us-west-2
  profile: tab-sls
  stage: ${env:SLS_STAGE, self:custom.stageDefault}
  iamRoleStatements:
    # Rules for fine-grained DynamoDB access:
    #   https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/specifying-conditions.html
    # See rules based on Cognito user ID:
    #   https://stackoverflow.com/a/25888309
    # May want to reference DynamoDB table ARNs via variables:
    #   https://serverless.com/framework/docs/providers/aws/guide/variables#reference-cloudformation-outputs
    - Effect: "Allow"
      Action:
        - "dynamodb:BatchGetItem"
        - "dynamodb:BatchWriteItem"
        - "dynamodb:DeleteItem"
        - "dynamodb:DescribeReservedCapacity"
        - "dynamodb:DescribeReservedCapacityOfferings"
        - "dynamodb:DescribeTable"
        - "dynamodb:DescribeTimeToLive"
        - "dynamodb:GetItem"
        - "dynamodb:ListTables"
        - "dynamodb:ListTagsOfResource"
        - "dynamodb:PutItem"
        - "dynamodb:Query"
        - "dynamodb:Scan"
        - "dynamodb:UpdateItem"
      Resource: "*"

custom:
  stageDefault: dev

plugins:
  # Include only the required node modules.
  # https://github.com/dougmoscrop/serverless-plugin-include-dependencies
  - serverless-plugin-include-dependencies

# Only include the build and its node modules.
package:
  exclude:
    - ./**
  include:
    - build/**

functions:
  graphql:
    handler: build/handler.serverlessHandler
    events:
      - http:
          path: graphql/
          method: post
          cors: true
          # Require user to be authenticated with AWS Cognito.
          authorizer:
            name: tab_auth_${self:provider.stage}
            arn: ${env:COGNITO_IDENTITYPOOLID}
