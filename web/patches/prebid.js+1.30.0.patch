diff --git a/node_modules/prebid.js/modules/rhythmoneBidAdapter.js b/node_modules/prebid.js/modules/rhythmoneBidAdapter.js
index f16e797..9b59f7b 100644
--- a/node_modules/prebid.js/modules/rhythmoneBidAdapter.js
+++ b/node_modules/prebid.js/modules/rhythmoneBidAdapter.js
@@ -26,13 +26,12 @@ function RhythmOneBidAdapter() {
       placement_id: placementIds.join(',').replace(/[,]+/g, ',').replace(/^,|,$/g, '')
     };
     let w = typeof (window) !== 'undefined' ? window : {document: {location: {href: ''}}};
-    let ao = w.document.location.ancestorOrigins;
+
+    // Edited by Gladly. Adapters should use the location of the current
+    // frame, not the location of the new tab page.
     let q = [];
     let u = '//hbevents.1rx.io/audit?';
-
-    if (ao && ao.length > 0) {
-      data.ancestor_origins = ao[ao.length - 1];
-    }
+    data.ancestor_origins = w.document.location.hostname;
 
     data.popped = w.opener !== null ? 1 : 0;
     data.framed = w.top === w ? 0 : 1;
@@ -108,11 +107,9 @@ function RhythmOneBidAdapter() {
     }
 
     p('domain', attempt(function() {
-      var d = w.document.location.ancestorOrigins;
-      if (d && d.length > 0) {
-        return d[d.length - 1];
-      }
-      return w.top.document.location.hostname; // try/catch is in the attempt function
+      // Edited by Gladly. Adapters should use the location of the current
+      // frame, not the location of the new tab page.
+      return w.document.location.hostname;
     }, ''));
     p('url', attempt(function() {
       var l;
diff --git a/node_modules/prebid.js/src/refererDetection.js b/node_modules/prebid.js/src/refererDetection.js
index bf2ef52..fd9151f 100644
--- a/node_modules/prebid.js/src/refererDetection.js
+++ b/node_modules/prebid.js/src/refererDetection.js
@@ -124,21 +124,13 @@ export function detectReferer(win) {
    * @returns {refererInfo}
    */
   function refererInfo() {
-    try {
-      let levels = getLevels();
-      let numIframes = levels.length - 1;
-      let reachedTop = (levels[numIframes].location !== null ||
-        (numIframes > 0 && levels[numIframes - 1].referrer !== null));
-      let stackInfo = getPubUrlStack(levels);
-
-      return {
-        referer: stackInfo.detectedRefererUrl,
-        reachedTop,
-        numIframes,
-        stack: stackInfo.stack,
-      };
-    } catch (e) {
-      // Ignore error
+    // Edited by Gladly. Adapters should use the location of the current
+    // frame, not the location of the new tab page.
+    return {
+      numIframes: 0,
+      reachedTop: true,
+      referer: win.location.href,
+      stack: [ win.location.href ]
     }
   }
 
diff --git a/node_modules/prebid.js/src/utils.js b/node_modules/prebid.js/src/utils.js
index 93b1948..3e042be 100644
--- a/node_modules/prebid.js/src/utils.js
+++ b/node_modules/prebid.js/src/utils.js
@@ -204,16 +204,12 @@ export function parseGPTSingleSizeArray(singleSize) {
 /**
  * @deprecated This function will be removed soon
  */
+// Edited by Gladly. Adapters should use the location of the current
+// frame, not the location of the new tab page.
+// Note that this is deprecated, so we must address this
+// elsewhere in Prebid code:
+// https://github.com/prebid/Prebid.js/issues/3072
 exports.getTopWindowLocation = function() {
-  if (exports.inIframe()) {
-    let loc;
-    try {
-      loc = exports.getAncestorOrigins() || exports.getTopFrameReferrer();
-    } catch (e) {
-      logInfo('could not obtain top window location', e);
-    }
-    if (loc) return parse(loc, {'decodeSearchAsString': true});
-  }
   return exports.getWindowLocation();
 }
 
@@ -242,11 +238,10 @@ exports.getTopFrameReferrer = function () {
 /**
  * @deprecated This function will be removed soon
  */
+// Edited by Gladly. Adapters should use the location of the current
+// frame, not the location of the new tab page.
 exports.getAncestorOrigins = function () {
-  if (window.document.location && window.document.location.ancestorOrigins &&
-    window.document.location.ancestorOrigins.length >= 1) {
-    return window.document.location.ancestorOrigins[window.document.location.ancestorOrigins.length - 1];
-  }
+  return
 };
 
 exports.getWindowTop = function () {
