
service: lambda
frameworkVersion: ">=1.12.0 <2.0.0"

provider:
  name: aws
  runtime: nodejs6.10
  region: us-west-2
  profile: tab-sls
  stage: ${env:SLS_STAGE, self:custom.stageDefault}
  iamRoleStatements:
    # TODO: more restrictive, per-user permissions
    - Effect: "Allow"
      Action:
        - "dynamodb:BatchGetItem"
        - "dynamodb:BatchWriteItem"
        - "dynamodb:DeleteItem"
        - "dynamodb:DescribeReservedCapacity"
        - "dynamodb:DescribeReservedCapacityOfferings"
        - "dynamodb:DescribeTable"
        - "dynamodb:DescribeTimeToLive"
        - "dynamodb:GetItem"
        - "dynamodb:ListTables"
        - "dynamodb:ListTagsOfResource"
        - "dynamodb:PutItem"
        - "dynamodb:Query"
        - "dynamodb:Scan"
        - "dynamodb:UpdateItem"
      Resource: "*"

custom:
  stageDefault: dev

plugins:
  # Include only the required node modules.
  # https://github.com/dougmoscrop/serverless-plugin-include-dependencies
  - serverless-plugin-include-dependencies

# Only include the build and its node modules.
package:
  exclude:
    - ./**
  include:
    - build/**

functions:
  migrate:
    handler: build/migrate/migrate.serverlessHandler
    events:
      - http:
          path: migrate/
          method: get
          cors: true
  migrate_auth:
    handler: build/migrate_auth/migrate_auth.serverlessHandler
    events:
      - http:
          path: migrate_auth/
          method: get
          cors: true
  hearts:
    handler: build/hearts/hearts.serverlessHandler
    events:
      - http:
          path: hearts/
          method: get
          cors: true
          # Authorizer docs:
          # https://serverless.com/framework/docs/providers/aws/events/apigateway/#http-endpoints-with-custom-authorizers
          ## TODO: reenable later
          # authorizer:
          #   name: authorizer_${opt:stage, self:provider.stage}
          #   arn:  arn:aws:cognito-idp:us-west-2:167811431063:userpool/us-west-2_9MWuEqLeW 
