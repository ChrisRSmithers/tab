
service: dynamodb
frameworkVersion: ">=1.14.0 <2.0.0"

provider:
  name: aws
  runtime: nodejs6.10
  region: us-west-2
  stage: ${env:SLS_STAGE, self:custom.stageDefault}

plugins:
  # https://github.com/sbstjn/serverless-dynamodb-autoscaling
  # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dynamodb-table.html#cfn-dynamodb-table-examples-application-autoscaling
  - serverless-dynamodb-autoscaling

custom:
  stageDefault: dev
  # https://github.com/sbstjn/serverless-dynamodb-autoscaling
  capacities:
    - table: usersTable
      index:
        - UsersByUsername
      read:
        minimum: 1
        maximum: 1000
        usage: 0.75
      write:
        minimum: 1
        maximum: 1000
        usage: 0.60
    - table: charitiesTable
      read:
        minimum: 1
        maximum: 1000
        usage: 0.75
      write:
        minimum: 1
        maximum: 1000
        usage: 0.60
    - table: widgetsTable
      read:
        minimum: 1
        maximum: 1000
        usage: 0.75
      write:
        minimum: 1
        maximum: 1000
        usage: 0.60
    - table: userLevelsTable
      read:
        minimum: 1
        maximum: 1000
        usage: 0.75
      write:
        minimum: 1
        maximum: 1000
        usage: 0.60
    - table: vcDonationLogTable
      read:
        minimum: 1
        maximum: 1000
        usage: 0.75
      write:
        minimum: 1
        maximum: 1000
        usage: 0.60
    - table: backgroundImagesTable
      read:
        minimum: 1
        maximum: 1000
        usage: 0.75
      write:
        minimum: 1
        maximum: 1000
        usage: 0.60
    - table: userWidgetsTable
      read:
        minimum: 1
        maximum: 1000
        usage: 0.75
      write:
        minimum: 1
        maximum: 1000
        usage: 0.60
    - table: userTabsLogTable
      read:
        minimum: 1
        maximum: 1000
        usage: 0.75
      write:
        minimum: 1
        maximum: 1000
        usage: 0.60
    - table: referralDataLogTable
      read:
        minimum: 1
        maximum: 1000
        usage: 0.75
      write:
        minimum: 1
        maximum: 1000
        usage: 0.60

resources:
  Resources:

    usersTable:  
      Type: AWS::DynamoDB::Table
      Properties:  
        TableName: Users-${self:provider.stage}
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: username
            AttributeType: S
        GlobalSecondaryIndexes:
          - IndexName: UsersByUsername
            KeySchema:
            - AttributeName: username
              KeyType: HASH
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

    charitiesTable:  
      Type: AWS::DynamoDB::Table
      Properties:  
        TableName: Charities-${self:provider.stage}
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

    widgetsTable:  
      Type: AWS::DynamoDB::Table
      Properties:  
        TableName: Widgets-${self:provider.stage}
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

    userLevelsTable:  
      Type: AWS::DynamoDB::Table
      Properties:  
        TableName: UserLevels-${self:provider.stage}
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: N
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

    vcDonationLogTable:  
      Type: AWS::DynamoDB::Table
      Properties:  
        TableName: VcDonationLog-${self:provider.stage}
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
        AttributeDefinitions:
          - AttributeName: userId
            AttributeType: S
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

    backgroundImagesTable:  
      Type: AWS::DynamoDB::Table
      Properties:  
        TableName: BackgroundImages-${self:provider.stage}
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

    userWidgetsTable:  
      Type: AWS::DynamoDB::Table
      Properties:  
        TableName: UserWidgets-${self:provider.stage}
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
          - AttributeName: widgetId
            KeyType: RANGE
        AttributeDefinitions:
          - AttributeName: userId
            AttributeType: S
          - AttributeName: widgetId
            AttributeType: S
        GlobalSecondaryIndexes:
          - IndexName: Widgets
            KeySchema:
            - AttributeName: userId
              KeyType: HASH
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

    userTabsLogTable:  
      Type: AWS::DynamoDB::Table
      Properties:  
        TableName: UserTabsLog-${self:provider.stage}
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
        AttributeDefinitions:
          - AttributeName: userId
            AttributeType: S
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

    referralDataLogTable:  
      Type: AWS::DynamoDB::Table
      Properties:  
        TableName: ReferralDataLog-${self:provider.stage}
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
